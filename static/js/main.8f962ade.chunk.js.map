{"version":3,"sources":["components/FaceRecognition/faceRecognition.js","components/ImageLinkForm/imageLinkForm.js","components/Logo/Robots.png","components/Logo/logo.js","components/Navigation/Navigation.js","components/Rank/rank.js","components/Register/register.js","components/SignIn/signIn.js","components/Container/container.js","utils/particlesLayout.js","utils/appState.js","utils/calculateFaceLocation.js","App.js","reportWebVitals.js","index.js"],"names":["faceRecognition","imageUrl","box","style","position","className","id","alt","src","map","imageBox","i","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","placeholder","onClick","Logo","options","max","height","width","paddingTop","Robot","Navigation","newPath","isSignIn","display","justifyContent","Rank","userName","userEntries","Register","props","onEmailChange","event","setState","registerEmail","target","value","onPasswrodChange","registerPassword","onNameChange","registerName","onSubmitRegister","error","document","getElementById","state","fetch","method","headers","body","JSON","stringify","email","password","name","then","response","json","user","loadUser","catch","err","console","log","textContent","color","getElementsByName","forEach","elem","addEventListener","code","preventDefault","click","this","htmlFor","React","Component","SignIn","signInEmail","signInPassword","onSubmitSignIn","loading","testerSignIn","Container","particlesLayout","particles","number","density","enable","value_area","interactivity","detect_on","events","onhover","mode","onclick","appState","input","route","entries","joined","calculateFaceLocation","data","clarifaiFace","image","Number","left_col","top_row","right_col","bottom_row","App","newUser","displayFaceBox","temp","push","regions","region_info","bounding_box","Object","assign","onRouteChange","params","particlesOptions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8f962ade.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./faceRecognition.css\";\r\n\r\n/**\r\n * Display the image and, draw squares at the faces location\r\n * @param {String} imageUrl\r\n * @param {Array} box\r\n * @returns\r\n */\r\nconst faceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div className=\"absolute\">\r\n        <img id=\"inputimage\" alt=\"Face\" src={imageUrl} />\r\n        {box.map((imageBox, i) => {\r\n          return (\r\n            <div\r\n              key={i}\r\n              className=\"bounding-box\"\r\n              style={{\r\n                top: imageBox.topRow,\r\n                right: imageBox.rightCol,\r\n                bottom: imageBox.bottomRow,\r\n                left: imageBox.leftCol,\r\n              }}\r\n            ></div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default faceRecognition;\r\n","import React from \"react\";\r\nimport \"./imageLinkForm.css\";\r\n\r\n/**\r\n * Handles the display, and input of information in main page\r\n * @param {String} onInputChange\r\n * @param {function} onButtonSubmit\r\n * @returns\r\n */\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">This magic tool will detect faces in your pictures !</p>\r\n      <div className=\"center\">\r\n        <div className=\"center form pa4 br3 shadow-2\">\r\n          <input\r\n            className=\"f4 pa2 w-70 center\"\r\n            type=\"tex\"\r\n            onChange={onInputChange}\r\n            placeholder=\"Image URL\"\r\n          />\r\n          <button\r\n            className=\"grow f4 link ph3 pv2 dib white bg-gray\"\r\n            onClick={onButtonSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","export default __webpack_public_path__ + \"static/media/Robots.7980959b.png\";","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport Robot from \"./Robots.png\";\r\n\r\n/**\r\n * Handles the logo display\r\n * @returns\r\n */\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"ma4 mt0\">\r\n      <Tilt\r\n        className=\"Tilt br2 shadow-3\"\r\n        options={{ max: 50 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner\">\r\n          <img style={{ paddingTop: \"30px\" }} src={Robot} alt=\"Robot\"></img>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Handles the info displayed at the Navbar\r\n * @param {Function} newPath\r\n * @param {Bool} isSignIn\r\n * @returns\r\n */\r\nconst Navigation = ({ newPath, isSignIn }) => {\r\n  if (isSignIn) {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          onClick={() => newPath(\"signout\")}\r\n          className=\"br3 shadow-5 ba b--black-10 mv4 w-100 w-100-m w-25-l mw5 pv3 f3 mr3 pointer\"\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Handles the display of the user info and rank in the database\r\n * @param {String} userName\r\n * @param {String} userEntries\r\n * @returns\r\n */\r\nconst Rank = ({ userName, userEntries }) => {\r\n  return <div className=\"black f3\">{`${userName}  # ${userEntries}`}</div>;\r\n};\r\nexport default Rank;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Handles the register form and integration of the information to the database\r\n */\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      registerEmail: \"\",\r\n      registerPassword: \"\",\r\n      registerName: \"\",\r\n    };\r\n  }\r\n  onEmailChange = (event) => {\r\n    this.setState({ registerEmail: event.target.value });\r\n  };\r\n\r\n  onPasswrodChange = (event) => {\r\n    this.setState({ registerPassword: event.target.value });\r\n  };\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({ registerName: event.target.value });\r\n  };\r\n\r\n  onSubmitRegister = () => {\r\n    const error = document.getElementById(\"error\");\r\n    const { registerEmail, registerPassword, registerName } = this.state;\r\n\r\n    if (registerEmail && registerPassword && registerName) {\r\n      fetch(\"https://secret-island-60464.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: registerEmail,\r\n          password: registerPassword,\r\n          name: registerName,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((user) => {\r\n          this.props.loadUser(user);\r\n          this.props.newPath(\"home\");\r\n        })\r\n        .catch((err) => console.log(\"Error submiting\", err));\r\n    } else {\r\n      error.textContent = \"Please fill all parameteres\";\r\n      error.style.color = \"red\";\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let inputs = document.getElementsByName(\"input\");\r\n    inputs.forEach(function (elem) {\r\n      elem.addEventListener(\"keyup\", function (event) {\r\n        if (event.code === \"Enter\") {\r\n          // Cancel the default action, if needed\r\n          event.preventDefault();\r\n          // Trigger the button element with a click\r\n          document.getElementById(\"registerSubmit\").click();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { newPath } = this.props;\r\n    return (\r\n      <article className=\"br3 shadow-5 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"user-name\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"input\"\r\n                  id=\"user-name\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"input\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"input\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswrodChange}\r\n                />\r\n              </div>\r\n              <span id=\"error\"></span>\r\n            </fieldset>\r\n            <div>\r\n              <input\r\n                onClick={this.onSubmitRegister}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                id=\"registerSubmit\"\r\n                value=\"Register\"\r\n              />\r\n              <div className=\"lh-copy mt3\">\r\n                <p\r\n                  onClick={() => newPath(\"signin\")}\r\n                  className=\"f6 link dim black db pointer\"\r\n                >\r\n                  Back\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Handles the signin form and integration of the info to the database\r\n */\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    let error = document.getElementById(\"error\");\r\n    this.setState({ signInEmail: event.target.value });\r\n    error.textContent = \"\";\r\n  };\r\n\r\n  onPasswrodChange = (event) => {\r\n    let error = document.getElementById(\"error\");\r\n    this.setState({ signInPassword: event.target.value });\r\n    error.textContent = \"\";\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    this.setState({ loading: true });\r\n    let error = document.getElementById(\"error\");\r\n    fetch(\"https://secret-island-60464.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.newPath(\"home\");\r\n        } else {\r\n          error.textContent = \"Please enter a valid user\";\r\n          error.style.color = \"red\";\r\n        }\r\n        this.setState({ loading: false });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  testerSignIn = () => {\r\n    fetch(\"https://secret-island-60464.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: \"xxxxx\",\r\n        password: \"xxxxx\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        this.props.loadUser(user);\r\n        this.props.newPath(\"home\");\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let inputs = document.getElementsByName(\"input\");\r\n    inputs.forEach(function (elem) {\r\n      elem.addEventListener(\"keyup\", function (event) {\r\n        if (event.code === \"Enter\") {\r\n          // Cancel the default action, if needed\r\n          event.preventDefault();\r\n          // Trigger the button element with a click\r\n          document.getElementById(\"inputSubmit\").click();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { newPath } = this.props;\r\n    return (\r\n      <article className=\"br3 shadow-5 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n        <main className=\"pa4 black-80 \">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0 \">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 \"\r\n                  type=\"email\"\r\n                  name=\"input\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"input\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswrodChange}\r\n                />\r\n              </div>\r\n              {this.loading && <span>Loading...</span>}\r\n              <span id=\"error\"></span>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n                id=\"inputSubmit\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p\r\n                onClick={() => newPath(\"register\")}\r\n                className=\"f6 link dim black db pointer\"\r\n              >\r\n                Register\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\n\r\nimport Rank from \"../Rank/rank\";\r\nimport ImageLinkForm from \"../ImageLinkForm/imageLinkForm\";\r\nimport FaceRecognition from \"../FaceRecognition/faceRecognition\";\r\nimport \"./container.css\";\r\n\r\nconst Container = ({\r\n  userName,\r\n  userEntries,\r\n  onInputChange,\r\n  onButtonSubmit,\r\n  box,\r\n  imageUrl,\r\n}) => {\r\n  return (\r\n    <div className=\"container center form pa4 br3 shadow-2\">\r\n      <div className=\"inputSide\">\r\n        <Rank userName={userName} userEntries={userEntries} />\r\n        <ImageLinkForm\r\n          onInputChange={onInputChange}\r\n          onButtonSubmit={onButtonSubmit}\r\n        />\r\n      </div>\r\n      <div className=\"imageSide\">\r\n        {imageUrl && <FaceRecognition box={box} imageUrl={imageUrl} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","/**\r\n * Parameters for the particles layout\r\n */\r\nconst particlesLayout = {\r\n  particles: {\r\n    number: {\r\n      value: 200,\r\n      density: {\r\n        enable: true,\r\n        value_area: 1000,\r\n      },\r\n    },\r\n  },\r\n  interactivity: {\r\n    detect_on: \"window\",\r\n    events: {\r\n      onhover: {\r\n        enable: true,\r\n        mode: \"grab\",\r\n      },\r\n      onclick: {\r\n        enable: true,\r\n        mode: \"repulse\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default particlesLayout;\r\n","/**\r\n * App data state parameters\r\n */\r\nconst appState = {\r\n  input: \"\",\r\n  imageUrl: \"\",\r\n  box: [],\r\n  route: \"signin\",\r\n  isSignIn: false,\r\n  user: {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    entries: 0,\r\n    joined: \"\",\r\n  },\r\n};\r\n\r\nexport default appState;\r\n","const calculateFaceLocation = (data) => {\r\n  const clarifaiFace = data;\r\n  const image = document.getElementById(\"inputimage\");\r\n  const width = Number(image.width);\r\n  const height = Number(image.height);\r\n  return {\r\n    leftCol: clarifaiFace.left_col * width,\r\n    topRow: clarifaiFace.top_row * height,\r\n    rightCol: width - clarifaiFace.right_col * width,\r\n    bottomRow: height - clarifaiFace.bottom_row * height,\r\n  };\r\n};\r\n\r\nexport default calculateFaceLocation;\r\n","import React, { Component } from \"react\";\r\nimport Particles from \"react-particles-js\";\r\n\r\nimport \"./App.css\";\r\nimport { Navigation, Logo, Container, SignIn, Register } from \"./components\";\r\nimport particlesOptions from \"./utils/particlesLayout\";\r\nimport appState from \"./utils/appState\";\r\nimport calculateFaceLocation from \"./utils/calculateFaceLocation\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = appState;\r\n  }\r\n\r\n  loadUser = (newUser) => {\r\n    this.setState({\r\n      user: {\r\n        id: newUser.id,\r\n        name: newUser.name,\r\n        email: newUser.email,\r\n        entries: newUser.entries,\r\n        joined: newUser.joined,\r\n      },\r\n    });\r\n  };\r\n\r\n  displayFaceBox = (box) => {\r\n    let temp = this.state.box;\r\n    temp.push(box);\r\n    this.setState({ box: temp });\r\n  };\r\n\r\n  onInputChange = (input) => {\r\n    this.setState({ input: input.target.value });\r\n  };\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({ imageUrl: this.state.input });\r\n    fetch(\"https://secret-island-60464.herokuapp.com/image\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: this.state.user.id,\r\n        imageUrl: this.state.input,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        response.json().then((data) => {\r\n          if (data.imageBox.regions[0].region_info.bounding_box) {\r\n            this.setState(\r\n              Object.assign(this.state.user, { entries: data.entries })\r\n            );\r\n            const imageBoxArray = data.imageBox.regions;\r\n            imageBoxArray.map(({ region_info: { bounding_box } }) =>\r\n              this.displayFaceBox(calculateFaceLocation(bounding_box))\r\n            );\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => console.log(\"Api not working\", err));\r\n  };\r\n\r\n  onRouteChange = (route) => {\r\n    this.setState({ route: route });\r\n    if (route === \"signout\") this.setState(appState);\r\n    else if (route === \"home\") this.setState({ isSignIn: true });\r\n  };\r\n\r\n  render() {\r\n    const { isSignIn, box, imageUrl, route } = this.state;\r\n    const { onRouteChange, onInputChange, onButtonSubmit } = this;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className=\"particles\" params={particlesOptions} />\r\n        <Navigation isSignIn={isSignIn} newPath={onRouteChange} />\r\n        {route === \"home\" ? (\r\n          <div>\r\n            <Logo />\r\n            <Container\r\n              userName={this.state.user.name}\r\n              userEntries={this.state.user.entries}\r\n              onInputChange={onInputChange}\r\n              onButtonSubmit={onButtonSubmit}\r\n              box={box}\r\n              imageUrl={imageUrl}\r\n            />\r\n          </div>\r\n        ) : route === \"signin\" ? (\r\n          <SignIn loadUser={this.loadUser} newPath={onRouteChange} />\r\n        ) : (\r\n          <Register loadUser={this.loadUser} newPath={onRouteChange} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}