{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Robots.png","components/Logo/logo.js","components/ImageLinkForm/imageLinkForm.js","components/Rank/rank.js","components/FaceRecognition/faceRecognition.js","components/SignIn/signIn.js","components/Register/register.js","components/particlesLayout.js","components/appState.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","newPath","isSignIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","src","Robot","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","userName","userEntries","faceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChange","event","error","document","getElementById","setState","signInEmail","target","value","textContent","onPasswrodChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","color","testerSignIn","getElementsByName","forEach","elem","addEventListener","code","preventDefault","click","this","htmlFor","name","React","Component","Register","registerEmail","registerPassword","onNameChange","registerName","onSubmitRegister","catch","err","console","log","particlesLayout","appState","input","route","entries","joined","App","newUser","calculateFaceLocation","data","clarifaiFace","image","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","imageBox","Object","assign","onRouteChange","params","particlesOptions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8115ca27.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({newPath, isSignIn}) => {\r\n    if(isSignIn){\r\n        return(\r\n        <nav style= {{display: 'flex', justifyContent: 'flex-end'}}>\r\n            <p\r\n                onClick ={() => newPath('signout')} \r\n                className = 'br3 shadow-5 ba b--black-10 mv4 w-100 w-100-m w-25-l mw5 pv3 f3 mr3 pointer'>Sign Out\r\n            </p>\r\n        </nav>)\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/Robots.7980959b.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport Robot from './Robots.png'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className= 'ma4 mt0' >\r\n            <Tilt className=\"Tilt br2 shadow-3\" options={{ max : 50 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner\"> \r\n                    <img \r\n                        style={{paddingTop: '30px'}} \r\n                        src={Robot} \r\n                        alt='Robot'>\r\n                    </img> \r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './imageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                This magic tool will detect a face in your pictures, give it a try!\r\n                <br></br> If there are multiple faces, it will only detect one!\r\n            </p>\r\n            <div className='center'>\r\n                <div className='center form pa4 br3 shadow-2'>\r\n                    <input \r\n                        className='f4 pa2 w-70 center' \r\n                        type ='tex' \r\n                        onChange={onInputChange}\r\n                    />\r\n                    <button \r\n                        className='grow f4 link ph3 pv2 dib white bg-gray'\r\n                        onClick={onButtonSubmit}\r\n                        >Detect\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({userName, userEntries}) => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {`${userName}, your current entries are...`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {`${userEntries}`}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Rank;","import React from 'react';\r\nimport './faceRecognition.css'\r\n\r\nconst faceRecognition = ({imageUrl, box}) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id= 'inputimage' alt='' src={imageUrl} width='500px' height='auto'/>\r\n                <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default faceRecognition;","import React from 'react';\r\n\r\nclass SignIn extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        let error = document.getElementById(\"error\");\r\n        this.setState({signInEmail: event.target.value})\r\n        error.textContent = \"\";\r\n    }\r\n\r\n    onPasswrodChange = (event) => {\r\n        let error = document.getElementById(\"error\");\r\n        this.setState({signInPassword: event.target.value})\r\n        error.textContent = \"\";\r\n    }\r\n\r\n    onSubmitSignIn = () =>{\r\n        let error = document.getElementById(\"error\");\r\n        fetch('https://secret-island-60464.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user=>{\r\n            if(user.id){\r\n                this.props.loadUser(user);\r\n                this.props.newPath('home');\r\n            }\r\n            else{\r\n                error.textContent = \"Please enter a valid user\";\r\n                error.style.color = \"red\";\r\n            }\r\n        })\r\n    }\r\n\r\n    testerSignIn = () =>{\r\n        fetch('https://secret-island-60464.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: \"xxxxx\",\r\n                password: \"xxxxx\"\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user=>{\r\n                this.props.loadUser(user);\r\n                this.props.newPath('home');\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        let inputs = document.getElementsByName(\"input\");\r\n        inputs.forEach(function(elem) \r\n        {\r\n            elem.addEventListener(\"keyup\", function(event) \r\n            {\r\n                if (event.code === \"Enter\") \r\n                {\r\n                    // Cancel the default action, if needed\r\n                    event.preventDefault();\r\n                    // Trigger the button element with a click\r\n                    document.getElementById(\"inputSubmit\").click();\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        const {newPath} = this.props;\r\n        return (\r\n        <article className=\"br3 shadow-5 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n            <main className=\"pa4 black-80 \">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0 \">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input \r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 \" \r\n                                type=\"email\"\r\n                                name=\"input\"  \r\n                                id=\"email-address\"\r\n                                onChange = {this.onEmailChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input \r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                type=\"password\" \r\n                                name=\"input\"  \r\n                                id=\"password\"\r\n                                onChange = {this.onPasswrodChange}\r\n                             />\r\n                        </div>\r\n                        <span id=\"error\"></span> \r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input\r\n                            onClick = {this.onSubmitSignIn} \r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Sign in\"\r\n                            id = \"inputSubmit\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                        <p \r\n                            onClick= {() => newPath('register')}\r\n                            className=\"f6 link dim black db pointer\">Register\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            registerEmail: '',\r\n            registerPassword: '',\r\n            registerName: ''\r\n        }\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({registerEmail: event.target.value})\r\n    }\r\n\r\n    onPasswrodChange = (event) => {\r\n        this.setState({registerPassword: event.target.value})\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({registerName: event.target.value})\r\n    }\r\n\r\n    onSubmitRegister = () =>{\r\n        const error = document.getElementById(\"error\");\r\n        const {registerEmail, registerPassword, registerName} = this.state;\r\n\r\n         if(registerEmail && registerPassword && registerName){\r\n            fetch('https://secret-island-60464.herokuapp.com/register', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    email: registerEmail,\r\n                    password: registerPassword,\r\n                    name: registerName\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(user=>{\r\n                    this.props.loadUser(user);\r\n                    this.props.newPath('home');\r\n                }\r\n        ).catch(err=> console.log('Error submiting', err))}\r\n        else\r\n        {\r\n            error.textContent = \"Please fill all parameteres\";\r\n            error.style.color = \"red\";\r\n        }\r\n    }\r\n\r\n     componentDidMount(){\r\n        let inputs = document.getElementsByName(\"input\");\r\n        inputs.forEach(function(elem) \r\n        {\r\n            elem.addEventListener(\"keyup\", function(event) \r\n            {\r\n                if (event.code === \"Enter\") \r\n                {\r\n                    // Cancel the default action, if needed\r\n                    event.preventDefault();\r\n                    // Trigger the button element with a click\r\n                    document.getElementById(\"registerSubmit\").click();\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    \r\n    render(){\r\n        const {newPath} = this.props;\r\n        return (\r\n        <article className=\"br3 shadow-5 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"user-name\">Name</label>\r\n                            <input \r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                type=\"text\"\r\n                                name=\"input\" \r\n                                id=\"user-name\"\r\n                                onChange={this.onNameChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input \r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"email\"\r\n                                name=\"input\"  \r\n                                id=\"email-address\"\r\n                                onChange={this.onEmailChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input \r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                type=\"password\" \r\n                                name=\"input\"\r\n                                id=\"password\"\r\n                                onChange={this.onPasswrodChange}\r\n                            />\r\n                        </div>\r\n                    <span id=\"error\"></span> \r\n                    </fieldset>\r\n                    <div>\r\n                        <input\r\n                            onClick = {this.onSubmitRegister} \r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            id = \"registerSubmit\"\r\n                            value=\"Register\"\r\n                        />\r\n                        <div className=\"lh-copy mt3\">\r\n                        <p \r\n                            onClick= {() => newPath('signin')}\r\n                            className=\"f6 link dim black db pointer\">Back\r\n                        </p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article> \r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","const particlesLayout = \r\n  {\r\n    \"particles\": {\r\n      \"number\": {\r\n        \"value\": 200,\r\n        \"density\": {\r\n          \"enable\": true,\r\n          \"value_area\": 1000\r\n  }} \r\n  },\r\n  \"interactivity\": {\r\n    \"detect_on\": \"window\",\r\n    \"events\": {\r\n      \"onhover\": {\r\n        \"enable\": true,\r\n        \"mode\": \"grab\"\r\n      },\r\n      \"onclick\": {\r\n        \"enable\": true,\r\n        \"mode\": \"repulse\"\r\n      }}}}\r\n\r\nexport default particlesLayout;","const appState = {\r\n      input: '',\r\n      imageUrl: '',\r\n      box: {}, \r\n      route: 'signin',\r\n      isSignIn: false,\r\n      user: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        entries: 0,\r\n        joined: ''\r\n      }\r\n    }\r\n\r\nexport default appState;","import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/imageLinkForm.js';\nimport Rank from './components/Rank/rank.js';\nimport FaceRecognition from './components/FaceRecognition/faceRecognition.js';\nimport SignIn from './components/SignIn/signIn.js';\nimport Particles from 'react-particles-js';\nimport Register from './components/Register/register';\nimport particlesOptions from './components/particlesLayout'\nimport appState from './components/appState';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = appState\n  }\n\n  loadUser = (newUser) => {\n      this.setState({user: {\n          id: newUser.id,\n          name: newUser.name,\n          email: newUser.email,\n          entries: newUser.entries,\n          joined: newUser.joined\n        }})\n  }\n\n\n  calculateFaceLocation = (data) =>{\n      const clarifaiFace = data;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n      }\n  }\n\n  displayFaceBox = (box) => {\n      this.setState({box: box});\n  }\n\n  onInputChange = (input) => {\n      this.setState({input: input.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('https://secret-island-60464.herokuapp.com/image', {\n      method: 'put',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n          id: this.state.user.id,\n          imageUrl: this.state.input\n      })})\n      .then(response =>{\n        response.json().then(data =>{\n            if(data.imageBox){\n              this.setState(Object.assign(this.state.user, {entries: data.entries}))\n              this.displayFaceBox(this.calculateFaceLocation(data.imageBox))\n            }\n        })})\n      .catch(err => console.log(\"Api not working\",err));\n  }\n\n    onRouteChange = (route) => {\n      this.setState({route: route});\n      if (route === 'signout') this.setState(appState);\n      else if(route === 'home') this.setState({isSignIn: true});\n    }\n    \n  \n  render() {\n    const {isSignIn, box,imageUrl,route} = this.state;\n    const {onRouteChange, onInputChange, onButtonSubmit} = this;\n    return (\n      <div className=\"App\">\n        <Particles \n          className=\"particles\"\n          params={particlesOptions}\n        />\n        <Navigation \n          isSignIn = {isSignIn}\n          newPath = {onRouteChange}\n        />\n        {route === 'home'\n          ? <div>\n              <Logo />\n              <Rank \n                userName = {this.state.user.name} \n                userEntries = {this.state.user.entries}\n              />\n              <ImageLinkForm \n                onInputChange={onInputChange}\n                onButtonSubmit={onButtonSubmit}/>\n              <FaceRecognition \n                box ={box} \n                imageUrl={imageUrl}\n              />\n            </div>\n          : (\n            route === 'signin'\n            ? <SignIn loadUser={this.loadUser} newPath = {onRouteChange}/>\n            : <Register loadUser={this.loadUser} newPath = {onRouteChange}/>\n          )\n        } \n      </div>\n    );\n  }}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}